from pygame import mixer
import time
import cv2
from tkinter import *
import tkinter.messagebox

root = Tk()
root.geometry('500x570')
frame = Frame(root, relief=RIDGE, borderwidth=2)
frame.pack(fill=BOTH, expand=1)
root.title('Driver Cam')
frame.config(background='black')
label = Label(frame, text="Driver Cam", bg='white', font=('Times 35 bold'))
label.pack(side=TOP)
filename = PhotoImage(file=r'E:\python\Driver Cam\demo2.png')
background_label = Label(frame, image=filename)
background_label.pack(side=TOP)


def hel():
    help(cv2)


def contri():
    tkinter.messagebox.showinfo("Contributors", "\n1.samuel jayson\n2. sanjai kanna \n3. santhosh \n4.santhosh kumar\n")


def anotherWin():
    tkinter.messagebox.showinfo("About",
                                'Driver Cam version v1.0\n Made Using\n-OpenCV\n-Numpy\n-Tkinter\n In Python 3')


menu = Menu(root)
root.config(menu=menu)

subm1 = Menu(menu)
menu.add_cascade(label="Tools", menu=subm1)
subm1.add_command(label="Open CV Docs", command=hel)

subm2 = Menu(menu)
menu.add_cascade(label="About", menu=subm2)
subm2.add_command(label="Driver Cam", command=anotherWin)
subm2.add_command(label="Contributors", command=contri)


def exitt():
    exit()


def web():
    capture = cv2.VideoCapture(0)
    while True:
        ret, frame1 = (capture.read())
        gray = cv2.cvtColor(frame1, cv2.COLOR_BGR2GRAY)
        cv2.imshow('frame', frame1)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    capture.release()
    cv2.destroyAllWindows()


def webrec():
    capture = cv2.VideoCapture(0)
    fourcc = cv2.VideoWriter_fourcc(*'XVID')
    op = cv2.VideoWriter('Sample1.avi', fourcc, 11.0, (640, 480))
    while True:
        ret, frame2 = capture.read()
        gray = cv2.cvtColor(frame2, cv2.COLOR_BGR2GRAY)
        cv2.imshow('frame', frame2)
        op.write(frame2)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    op.release()
    capture.release()
    cv2.destroyAllWindows()


def webdet():
    capture = cv2.VideoCapture(0)
    face_cascade = cv2.CascadeClassifier('lbpcascade_frontalface.xml')
    eye_glass = cv2.CascadeClassifier('haarcascade_eye_tree_eyeglasses.xml')

    while True:
        ret, frame3 = capture.read()
        gray = cv2.cvtColor(frame3, cv2.COLOR_BGR2GRAY)
        faces = face_cascade.detectMultiScale(gray)

        for (x, y, w, h) in faces:
            font = cv2.FONT_HERSHEY_COMPLEX
            cv2.putText(frame3, 'Face', (x + w, y + h), font, 1, (250, 250, 250), 2, cv2.LINE_AA)
            cv2.rectangle(frame3, (x, y), (x + w, y + h), (255, 0, 0), 2)
            roi_gray = gray[y:y + h, x:x + w]
            roi_color = frame3[y:y + h, x:x + w]

            eye_g = eye_glass.detectMultiScale(roi_gray)
            for (ex, ey, ew, eh) in eye_g:
                cv2.rectangle(roi_color, (ex, ey), (ex + ew, ey + eh), (0, 255, 0), 2)

        cv2.imshow('frame', frame3)
        if cv2.waitKey(1) & 0xff == ord('q'):
            break
    capture.release()
    cv2.destroyAllWindows()


def webdetRec():
    capture = cv2.VideoCapture(0)
    face_cascade = cv2.CascadeClassifier('lbpcascade_frontalface.xml')
    eye_glass = cv2.CascadeClassifier('haarcascade_eye_tree_eyeglasses.xml')
    fourcc = cv2.VideoWriter_fourcc(*'XVID')
    op = cv2.VideoWriter('Sample2.avi', fourcc, 9.0, (640, 480))

    while True:
        ret, frame4 = capture.read()
        gray = cv2.cvtColor(frame4, cv2.COLOR_BGR2GRAY)
        faces = face_cascade.detectMultiScale(gray)

        for (x, y, w, h) in faces:
            font = cv2.FONT_HERSHEY_COMPLEX
            cv2.putText(frame4, 'Face', (x + w, y + h), font, 1, (250, 250, 250), 2, cv2.LINE_AA)
            cv2.rectangle(frame4, (x, y), (x + w, y + h), (255, 0, 0), 2)
            roi_gray = gray[y:y + h, x:x + w]
            roi_color = frame4[y:y + h, x:x + w]

            eye_g = eye_glass.detectMultiScale(roi_gray)
            for (ex, ey, ew, eh) in eye_g:
                cv2.rectangle(roi_color, (ex, ey), (ex + ew, ey + eh), (0, 255, 0), 2)
        op.write(frame4)
        cv2.imshow('frame', frame4)
        if cv2.waitKey(1) & 0xff == ord('q'):
            break
    op.release()
    capture.release()
    cv2.destroyAllWindows()


def alert():
    mixer.init()
    alert1 = mixer.Sound('beep-07.wav')
    alert1.play()
    time.sleep(0.1)
    alert1.play()


def blink():
    capture = cv2.VideoCapture(0)
    face_cascade = cv2.CascadeClassifier('lbpcascade_frontalface.xml')
    eye_cascade = cv2.CascadeClassifier('haarcascade_eye.xml')
    blink_cascade = cv2.CascadeClassifier('CustomBlinkCascade.xml')

    while True:
        ret, frame5 = capture.read()
        gray = cv2.cvtColor(frame5, cv2.COLOR_BGR2GRAY)
        faces = face_cascade.detectMultiScale(gray)

        for (x, y, w, h) in faces:
            font = cv2.FONT_HERSHEY_COMPLEX
            cv2.putText(frame5, 'Face', (x + w, y + h), font, 1, (250, 250, 250), 2, cv2.LINE_AA)
            cv2.rectangle(frame5, (x, y), (x + w, y + h), (255, 0, 0), 2)
            roi_gray = gray[y:y + h, x:x + w]
            roi_color = frame5[y:y + h, x:x + w]

            eyes = eye_cascade.detectMultiScale(roi_gray)
            for (ex, ey, ew, eh) in eyes:
                cv2.rectangle(roi_color, (ex, ey), (ex + ew, ey + eh), (0, 255, 0), 2)

            blink1 = blink_cascade.detectMultiScale(roi_gray)
            for (eyx, eyy, eyw, eyh) in blink1:
                cv2.rectangle(roi_color, (eyx, eyy), (eyx + eyw, eyy + eyh), (255, 255, 0), 2)
                alert()
        cv2.imshow('frame', frame5)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    capture.release()
    cv2.destroyAllWindows()


but1 = Button(frame, padx=5, pady=5, width=39, bg='white', fg='black', relief=GROOVE, command=web, text='Open Cam',
              font=('helvetica 15 bold'))
but1.place(x=5, y=104)

but2 = Button(frame, padx=5, pady=5, width=39, bg='white', fg='black', relief=GROOVE, command=webrec,
              text='Open Cam & Record', font=('helvetica 15 bold'))
but2.place(x=5, y=176)

but3 = Button(frame, padx=5, pady=5, width=39, bg='white', fg='black', relief=GROOVE, command=webdet,
              text='Open Cam & Detect', font=('helvetica 15 bold'))
but3.place(x=5, y=250)

#but4 = Button(frame, padx=5, pady=5, width=39, bg='white', fg='black', relief=GROOVE, command=webdetRec,
 #             text='Detect & Record', font=('helvetica 15 bold'))
#but4.place(x=5, y=322)

but5 = Button(frame, padx=5, pady=5, width=39, bg='white', fg='black', relief=GROOVE, command=blink,
              text='Detect Eye Blink With Sound', font=('helvetica 15 bold'))
but5.place(x=5, y=400)

but5 = Button(frame, padx=5, pady=5, width=5, bg='white', fg='black', relief=GROOVE, text='EXIT', command=exitt,
              font=('helvetica 15 bold'))
but5.place(x=210, y=478)


root.mainloop()